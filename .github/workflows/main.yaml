name: Release to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: sumdrill-cluster
  GKE_ZONE: europe-north1-b
  FRONTEND_IMAGE: sumdrill-frontend
  BACKEND_IMAGE: sumdrill-backend
  DEPLOYMENT: sumdrill-deployment

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Authenticate Cloud SDK
      uses: google-github-actions/auth@v0
      with:
        project_id: ${{ secrets.GKE_PROJECT }}
        credentials_json: ${{ secrets.GKE_SA_KEY }}
        
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

      # This will register gcloud as the credential helper for all Google-supported Docker registries
    - run: gcloud --quiet auth configure-docker
    - run: gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_ZONE"

    - name: Build frontend image
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
          -f ./frontend/Dockerfile.production ./frontend

    - name: Publish frontend image
      run: |-
        docker push "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
    
    - name: Build backend image
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
          -f ./backend/Dockerfile ./backend

    - name: Publish backend image
      run: |-
        docker push "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
    
    - name: Deploy
      run: |-
        kubectl create namespace ${GITHUB_REF#refs/heads/} || true
        kubectl config set-context --current --namespace=${GITHUB_REF#refs/heads/}
        kustomize edit set namespace ${GITHUB_REF#refs/heads/}
        kustomize edit set image FRONTEND_IMAGE=gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
        kustomize edit set image BACKEND_IMAGE=gcr.io/$PROJECT_ID/$BACKEND_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA     
        kubectl apply -k .
        kubectl rollout status deployment $DEPLOYMENT
        kubectl get ingress

# or kustomize build . | kubectl apply -f -
    